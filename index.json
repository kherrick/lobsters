[
  [
    [
      "2024-01-18, 14:21:58",
      "https://lobste.rs/s/igpzqd/scalable_oltp_cloud_what_s_big_deal"
    ],
    [
      "Scalable OLTP in the Cloud: What’s the BIG DEAL?",
      "https://muratbuffalo.blogspot.com/2024/01/scalable-oltp-in-cloud-whats-big-deal.html"
    ]
  ],
  [
    [
      "2024-01-18, 13:49:24",
      "https://lobste.rs/s/4uude2/leftoverlocals_listening_llm_responses"
    ],
    [
      "LeftoverLocals:  Listening to LLM responses through leaked GPU local memory",
      "https://blog.trailofbits.com/2024/01/16/leftoverlocals-listening-to-llm-responses-through-leaked-gpu-local-memory/"
    ]
  ],
  [
    [
      "2024-01-18, 13:09:03",
      "https://lobste.rs/s/rtbcu9/gambit_c_embedding_c_code_directly_scheme"
    ],
    [
      "Gambit-C: Embedding C code directly in Scheme",
      "https://www.deusinmachina.net/p/gambit-c-scheme-and-c-a-match-made"
    ]
  ],
  [
    [
      "2024-01-18, 10:04:12",
      "https://lobste.rs/s/2ixz1y/cost_per_request"
    ],
    [
      "Cost per Request",
      "https://garrit.xyz/posts/2024-01-18-cost-per-request"
    ]
  ],
  [
    [
      "2024-01-18, 08:56:47",
      "https://lobste.rs/s/oeole6/modernizing_granite_s_mesh_rendering"
    ],
    [
      "Modernizing Granite’s mesh rendering",
      "https://themaister.net/blog/2024/01/17/modernizing-granites-mesh-rendering/"
    ]
  ],
  [
    [
      "2024-01-18, 08:28:43",
      "https://lobste.rs/s/hcqmsw/using_mem_take_reduce_heap_allocations"
    ],
    [
      "Using `mem::take` to reduce heap allocations",
      "https://ferrous-systems.com/blog/rustls-borrow-checker-p1/"
    ]
  ],
  [
    [
      "2024-01-18, 08:09:13",
      "https://lobste.rs/s/hm4vij/htmx_web_components_perfect_match"
    ],
    [
      "HTMX and Web Components: a Perfect Match",
      "https://binaryigor.com/htmx-and-web-components-a-perfect-match.html"
    ]
  ],
  [
    [
      "2024-01-18, 07:11:44",
      "https://lobste.rs/s/fux9y2/have_you_successfully_automated_some"
    ],
    [
      "Have you successfully automated some task with a publicly-available, pre-trained AI model?",
      "https://lobste.rs/s/fux9y2/have_you_successfully_automated_some"
    ]
  ],
  [
    [
      "2024-01-18, 07:03:51",
      "https://lobste.rs/s/jh9gj3/autopack_auto_build_run_react_app_within"
    ],
    [
      "Autopack - Auto build and run a React app within a Docker container without a Dockerfile",
      "https://github.com/kaychaks/autopack"
    ]
  ],
  [
    [
      "2024-01-18, 05:31:42",
      "https://lobste.rs/s/rvtips/tembo_operator_rust_based_kubernetes"
    ],
    [
      "Tembo Operator: A Rust-based Kubernetes Operator for Postgres | Tembo",
      "https://tembo.io/blog/tembo-operator/"
    ]
  ],
  [
    [
      "2024-01-18, 02:16:15",
      "https://lobste.rs/s/ggj98l/ai_not_so_good_parts"
    ],
    [
      "AI: the not-so-good parts",
      "https://xeiaso.net/talks/2024/prepare-unforeseen-consequences/"
    ]
  ],
  [
    [
      "2024-01-18, 01:36:33",
      "https://lobste.rs/s/ocqk8h/dumping_rom_gba_game_by_crashing_it"
    ],
    [
      "Dumping the ROM of a GBA game by crashing it",
      "https://www.youtube.com/watch?v=0-7PSmYYHF0"
    ]
  ],
  [
    [
      "2024-01-17, 22:50:28",
      "https://lobste.rs/s/lgyyg2/misconceptions_on_top_misconceptions"
    ],
    [
      "Misconceptions on Top of Misconceptions",
      "http://www.os2museum.com/wp/misconceptions-on-top-of-misconceptions/"
    ]
  ],
  [
    [
      "2024-01-17, 20:09:05",
      "https://lobste.rs/s/lmp0rt/systemd_enable_indefinite_service"
    ],
    [
      "systemd: enable indefinite service restarts",
      "https://michael.stapelberg.ch/posts/2024-01-17-systemd-indefinite-service-restarts/"
    ]
  ],
  [
    [
      "2024-01-17, 19:26:35",
      "https://lobste.rs/s/vwkxug/director_toy_story_also_drew_bsd_daemon"
    ],
    [
      "The Director of \"Toy Story\" also drew the BSD Daemon logo",
      "https://www.jacobelder.com/2024/01/17/director-of-toy-story-also-drew-bsd-daemon.html"
    ]
  ],
  [
    [
      "2024-01-17, 18:13:50",
      "https://lobste.rs/s/2i2m3h/from_0_1_mb_dos"
    ],
    [
      "From 0 to 1 MB in DOS",
      "https://blogsystem5.substack.com/p/from-0-to-1-mb-in-dos"
    ]
  ],
  [
    [
      "2024-01-17, 16:21:42",
      "https://lobste.rs/s/kgpsrm/beware_misleading_gpu_vs_cpu_benchmarks"
    ],
    [
      "Beware of misleading GPU vs CPU benchmarks",
      "https://pythonspeed.com/articles/gpu-vs-cpu/"
    ]
  ],
  [
    [
      "2024-01-17, 14:35:15",
      "https://lobste.rs/s/jbo8lw/vms_on_macos_using_apple_s_native"
    ],
    [
      "VMs on MacOS using Apple’s native Virtualization.Framework",
      "https://tart.run/"
    ]
  ],
  [
    [
      "2024-01-17, 13:59:34",
      "https://lobste.rs/s/o0lmln/wine_9_0_run_windows_apps_on_arm"
    ],
    [
      "Wine 9.0 - Run Windows apps on ARM",
      "https://gitlab.winehq.org/wine/wine/-/releases/wine-9.0"
    ]
  ],
  [
    [
      "2024-01-17, 12:57:58",
      "https://lobste.rs/s/xnzvea/htmx_is_composable"
    ],
    [
      "htmx is composable??",
      "https://timkellogg.me/blog/2024/01/17/htmx"
    ]
  ],
  [
    [
      "2024-01-17, 12:17:44",
      "https://lobste.rs/s/s5tdvr/willow_protocol"
    ],
    [
      "Willow protocol",
      "https://willowprotocol.org/"
    ]
  ],
  [
    [
      "2024-01-17, 11:56:29",
      "https://lobste.rs/s/xsmp7l/bare_minimum_atw_style_k_interpreter_for"
    ],
    [
      "bare minimum atw-style K interpreter for learning purposes",
      "https://github.com/kparc/ksimple"
    ]
  ],
  [
    [
      "2024-01-17, 11:51:04",
      "https://lobste.rs/s/v8xovv/how_design_isa"
    ],
    [
      "How to Design an ISA",
      "https://queue.acm.org/detail.cfm?id=3639445"
    ]
  ],
  [
    [
      "2024-01-17, 11:13:13",
      "https://lobste.rs/s/oaqtsr/running_openbsd_7_4_under_utm_on_macos"
    ],
    [
      "Running OpenBSD 7.4 under UTM on macOS",
      "https://blog.adamretter.org.uk/running-openbsd-74-under-utm/"
    ]
  ],
  [
    [
      "2024-01-17, 10:21:01",
      "https://lobste.rs/s/svg37b/using_will_should_technical_writing"
    ],
    [
      "Using \"will\" and \"should\" in technical writing",
      "https://jamesg.blog/2024/01/17/will-should/"
    ]
  ]
]