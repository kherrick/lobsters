[
  [
    [
      "2025-06-09, 06:41:01",
      "https://lobste.rs/s/yxv7q7/sway_1_11_released_with_new_wayland"
    ],
    [
      "Sway 1.11 Released With New Wayland Protocols & More",
      "https://www.phoronix.com/news/Sway-1.11-Released"
    ]
  ],
  [
    [
      "2025-06-09, 06:38:05",
      "https://lobste.rs/s/akvlo8/two_approaches_solving_quiet_fediverse"
    ],
    [
      "Two Approaches to Solving the “Quiet Fediverse” Problem: Conversation Backfilling Mechanisms",
      "https://hackers.pub/@hongminhee/2025/quiet-fediverse-two-approaches/en"
    ]
  ],
  [
    [
      "2025-06-09, 05:51:39",
      "https://lobste.rs/s/fmof95/zig_s_self_hosted_x86_backend_is_now"
    ],
    [
      "Zig's self-hosted x86 backend is now default in Debug mode",
      "https://ziglang.org/devlog/2025/?unique/#2025-06-08"
    ]
  ],
  [
    [
      "2025-06-09, 02:16:48",
      "https://lobste.rs/s/8tgpqm/field_notes_from_shipping_real_code_with"
    ],
    [
      "Field Notes From Shipping Real Code With Claude",
      "https://diwank.space/field-notes-from-shipping-real-code-with-claude"
    ]
  ],
  [
    [
      "2025-06-09, 01:06:36",
      "https://lobste.rs/s/pxt1pp/analyzing_ipv4_trades_with_gnuplot"
    ],
    [
      "Analyzing ipv4 trades with gnuplot",
      "https://ipv4a-5539ad.gitlab.io/"
    ]
  ],
  [
    [
      "2025-06-09, 01:04:28",
      "https://lobste.rs/s/h6mvya/unlocking_motorola_g23_some_words_on"
    ],
    [
      "Unlocking the Motorola G23 (and some words on Motorola)",
      "https://shomy.is-a.dev/blog/article/unlocking-the-motorola-g23"
    ]
  ],
  [
    [
      "2025-06-09, 00:11:36",
      "https://lobste.rs/s/0zpecd/lisp_machines_computer_s_boom_bust"
    ],
    [
      "Lisp Machines' Computer’s Boom and Bust",
      "https://www.youtube.com/watch?v=sV7C6Ezl35A"
    ]
  ],
  [
    [
      "2025-06-08, 22:08:35",
      "https://lobste.rs/s/o6ltxv/tesseract_open_source_ocr_optical"
    ],
    [
      "Tesseract Open Source OCR [optical character recognition] Engine",
      "https://github.com/tesseract-ocr/tesseract"
    ]
  ],
  [
    [
      "2025-06-08, 21:59:27",
      "https://lobste.rs/s/itfghb/poison_everywhere_no_output_from_your_mcp"
    ],
    [
      "Poison everywhere: No output from your MCP server is safe",
      "https://www.cyberark.com/resources/threat-research-blog/poison-everywhere-no-output-from-your-mcp-server-is-safe"
    ]
  ],
  [
    [
      "2025-06-08, 20:09:07",
      "https://lobste.rs/s/fwldgj/pijul_elpe_yaks_big_razors_bigger"
    ],
    [
      "Pijul - Elpe. Yaks big. Razors bigger",
      "https://pijul.org/posts/2025-06-08-elpe/"
    ]
  ],
  [
    [
      "2025-06-08, 20:01:29",
      "https://lobste.rs/s/mgrtte/what_next_after_vibe_coding"
    ],
    [
      "What next after vibe coding",
      "https://mastodon.social/@nixCraft/114649024218795319"
    ]
  ],
  [
    [
      "2025-06-08, 19:22:36",
      "https://lobste.rs/s/mj0rin/pocket_linkhut"
    ],
    [
      "Pocket to linkhut",
      "https://gist.github.com/gsquire/f2b572da529e7aed1227c51fee1cc130"
    ]
  ],
  [
    [
      "2025-06-08, 17:17:12",
      "https://lobste.rs/s/82zdak/low_impact_keybase_impersonation_issue"
    ],
    [
      "A Low-Impact Keybase Impersonation Issue on Lobsters",
      "https://www.naff.dev/blog/lobsters-keybase-impersonation"
    ]
  ],
  [
    [
      "2025-06-08, 15:34:46",
      "https://lobste.rs/s/snhi5l/if_virtual_threads_are_solution_what_is"
    ],
    [
      "If Virtual Threads are the solution, what is the problem? (2023)",
      "https://webtide.com/if-virtual-threads-are-the-solution-what-is-the-problem/"
    ]
  ],
  [
    [
      "2025-06-08, 15:32:13",
      "https://lobste.rs/s/atchtb/context7_up_date_documentation_for_llms"
    ],
    [
      "Context7: Up-to-date documentation for LLMs and AI code editors",
      "https://context7.com/"
    ]
  ],
  [
    [
      "2025-06-08, 15:20:19",
      "https://lobste.rs/s/h72rfa/105_vibe_coded_tools"
    ],
    [
      "105 vibe-coded tools",
      "https://tools.simonwillison.net/colophon"
    ]
  ],
  [
    [
      "2025-06-08, 12:26:12",
      "https://lobste.rs/s/xxoxwe/ditching_haproxy_my_homelab"
    ],
    [
      "Ditching HAProxy (in my homelab)",
      "https://arch.dog/bark/ditching-haproxy"
    ]
  ],
  [
    [
      "2025-06-08, 09:30:44",
      "https://lobste.rs/s/ydtluy/illusion_thinking_understanding"
    ],
    [
      "The Illusion of Thinking: Understanding the Strengths and Limitations of Reasoning Models via the Lens of Problem Complexity",
      "https://machinelearning.apple.com/research/illusion-of-thinking"
    ]
  ],
  [
    [
      "2025-06-08, 08:48:57",
      "https://lobste.rs/s/1owxr1/too_many_open_files"
    ],
    [
      "Too Many Open Files",
      "https://mattrighetti.com/2025/06/04/too-many-files-open"
    ]
  ],
  [
    [
      "2025-06-08, 08:24:14",
      "https://lobste.rs/s/uh7lh2/shell_scripting_c"
    ],
    [
      "Shell scripting in C",
      "https://sebastiano.tronto.net/blog/2024-09-20-c-scripting/"
    ]
  ],
  [
    [
      "2025-06-08, 08:20:48",
      "https://lobste.rs/s/ofxowp/getting_started_with_qt_without_nonsense"
    ],
    [
      "Getting started with Qt, without the nonsense",
      "https://sebastiano.tronto.net/blog/2025-04-04-qt-minimal/"
    ]
  ],
  [
    [
      "2025-06-08, 01:47:25",
      "https://lobste.rs/s/1u6prg/plan_for_simd"
    ],
    [
      "A plan for SIMD",
      "https://linebender.org/blog/a-plan-for-simd/"
    ]
  ],
  [
    [
      "2025-06-07, 20:53:58",
      "https://lobste.rs/s/b9vkel/xq_query_xml_data_using_xpath"
    ],
    [
      "xq: Query XML data using XPath",
      "https://github.com/linkdd/xq"
    ]
  ],
  [
    [
      "2025-06-07, 19:49:02",
      "https://lobste.rs/s/8gp15d/bill_atkinson_dies_from_cancer_at_74"
    ],
    [
      "Bill Atkinson Dies From Cancer at 74",
      "https://daringfireball.net/linked/2025/06/07/bill-atkinson-rip"
    ]
  ],
  [
    [
      "2025-06-07, 17:46:55",
      "https://lobste.rs/s/e8abqn/how_can_one_write_blazing_fast_yet_useful"
    ],
    [
      "How can one write blazing fast yet useful compilers (for lazy pure functional languages)?",
      "https://lobste.rs/s/e8abqn/how_can_one_write_blazing_fast_yet_useful"
    ]
  ]
]